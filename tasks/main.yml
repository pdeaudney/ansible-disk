- name: "Install util-linux"
  package:
    name: '{{ item }}'
    state: 'present'
  with_flattened:
    - 'parted'
  tags:
    - disk
    - pkgs
  when: disk_additional_disks

- name: "Partition additional disks"
  shell: |
    if
        [ -b {{ item.disk }} ]
    then
        [ -b {{ item.disk }}{{ item.disk_partition  }} ] || parted --script "{{ item.disk }}" mklabel gpt mkpart primary 1MiB 100%
    fi
  args:
    creates: '{{ item.disk }}{{ item.disk_partition  }}'
    executable: '/bin/bash'
  with_items: '{{ disk_additional_disks }}'
  tags:
    - disk

- name: Create filesystem on the first partition
  filesystem:
    dev: '{{ item.disk }}{{ item.disk_partition  }}'
    force: '{{ item.force|d(omit) }}'
    fstype: '{{ item.fstype }}'
    opts: '{{ item.fsopts|d(omit) }}'
  with_items: '{{ disk_additional_disks }}'
  tags:
    - disk

- name: "Ensure the mount directory exists"
  file:
    path: '{{ item.mount }}'
    owner: '{{ disk_user | default("root") }}'
    group: '{{ disk_group | default("root") }}'
    state: directory
  with_items: '{{ disk_additional_disks }}'
  tags:
    - disk

- name: Get UUID for partition
  command: blkid -s UUID -o value "{{ item.disk }}{{ item.disk_partition  }}"
  register: disk_blkid
  with_items: '{{ disk_additional_disks }}'
  changed_when: False
  check_mode: no
  tags:
    - disk

- name: "Mount additional disk"
  mount:
    name: '{{ item.0.mount }}'
    fstype: '{{ item.0.fstype }}'
    opts: '{{ item.0.mount_options|d(omit) }}'
    passno: '0'
    src: 'UUID={{ item.1.stdout }}'
    state: '{{ item.0.mount_state|d("mounted") }}'
  with_together:
    - '{{ disk_additional_disks }}'
    - '{{ disk_blkid.results }}'
  tags:
    - disk
